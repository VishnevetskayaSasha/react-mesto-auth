{"ast":null,"code":"import _toConsumableArray from\"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import\"../index.css\";import Header from\"./Header.js\";import Main from\"./Main.js\";import Footer from\"./Footer.js\";import PopupWithForm from\"./PopupWithForm.js\";import ImagePopup from\"./ImagePopup.js\";import CurrentUserContext from\"../contexts/CurrentUserContext.js\";import api from\"../utils/Api.js\";import EditProfilePopup from\"./EditProfilePopup.js\";import EditAvatarPopup from\"./EditAvatarPopup.js\";import AddPlacePopup from\"./AddPlacePopup.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),isEditProfilePopupOpen=_React$useState2[0],setIsEditProfilePopupOpen=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isAddPlacePopupOpen=_React$useState4[0],setIsAddPlacePopupOpen=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),isEditAvatarPopupOpen=_React$useState6[0],setIsEditAvatarPopupOpen=_React$useState6[1];var _React$useState7=React.useState({link:\"\",name:\"\"}),_React$useState8=_slicedToArray(_React$useState7,2),selectedCard=_React$useState8[0],setSelectedCard=_React$useState8[1];var _React$useState9=React.useState({}),_React$useState10=_slicedToArray(_React$useState9,2),currentUser=_React$useState10[0],setCurrentUser=_React$useState10[1];var _React$useState11=React.useState([]),_React$useState12=_slicedToArray(_React$useState11,2),cards=_React$useState12[0],setCards=_React$useState12[1];// Получаем данные с сервера (Данные профиля + данные карточек)\nReact.useEffect(function(){api.getUserInfo().then(function(userData){setCurrentUser(userData);}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});api.getInitialCards().then(function(cards){setCards(cards);}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});},[]);function handleEditProfileClick(){setIsEditProfilePopupOpen(true);}function handleAddPlaceClick(){setIsAddPlacePopupOpen(true);}function handleEditAvatarClick(){setIsEditAvatarPopupOpen(true);}function closeAllPopups(){setIsEditProfilePopupOpen(false);setIsAddPlacePopupOpen(false);setIsEditAvatarPopupOpen(false);setSelectedCard({link:\"\",name:\"\"});}function handleCardClick(card){setSelectedCard(card);}// отправляем данные профиля на сервер\nfunction handleUpdateUser(user){api.editUserInfo(user).then(function(user){setCurrentUser(user);closeAllPopups();}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}function handleUpdateAvatar(avatar){api.editAvatar(avatar).then(function(avatar){setCurrentUser(avatar);closeAllPopups();}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}function handleAddPlaceSubmit(newCard){api.addNewCards(newCard).then(function(newCard){setCards([newCard].concat(_toConsumableArray(cards)));closeAllPopups();}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}function handleCardLike(card){// Снова проверяем, есть ли уже лайк на этой карточке\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Отправляем запрос в API и получаем обновлённые данные карточки\napi.changeLikeCardStatus(card._id,!isLiked).then(function(newCard){setCards(function(state){return state.map(function(c){return c._id===card._id?newCard:c;});});}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}function handleCardDelete(card){api.deleteCard(card._id).then(function(){var newCards=cards.filter(function(event){return event._id!==card._id;});setCards(newCards);}).catch(function(err){console.log(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(err));});}return/*#__PURE__*/_jsx(CurrentUserContext.Provider,{value:currentUser,children:/*#__PURE__*/_jsxs(\"div\",{className:\"contents\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(Main,{onEditProfile:handleEditProfileClick,onEditAvatar:handleEditAvatarClick,onAddPlace:handleAddPlaceClick,onCardClick:handleCardClick,onCardLike:handleCardLike,onCardDelete:handleCardDelete,cards:cards}),/*#__PURE__*/_jsx(Footer,{})]}),/*#__PURE__*/_jsx(EditProfilePopup// попап редактирования профиля\n,{isOpen:isEditProfilePopupOpen,onClose:closeAllPopups,onUpdateUser:handleUpdateUser}),/*#__PURE__*/_jsx(AddPlacePopup// попап добавления карточек\n,{isOpen:isAddPlacePopupOpen,onClose:closeAllPopups,onAddPlace:handleAddPlaceSubmit}),/*#__PURE__*/_jsx(PopupWithForm// попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n,{name:\"delete\",nameForm:\"delete-form\",title:\"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",button:\"delete\",text:\"\\u0414\\u0430\"}),/*#__PURE__*/_jsx(EditAvatarPopup// попап аватара\n,{isOpen:isEditAvatarPopupOpen,onClose:closeAllPopups,onUpdateAvatar:handleUpdateAvatar}),/*#__PURE__*/_jsx(ImagePopup// попап фулскрин картинки\n,{card:selectedCard,onClose:closeAllPopups})]})});}export default App;","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","useState","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","link","name","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","useEffect","getUserInfo","then","userData","catch","err","console","log","getInitialCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","newCard","addNewCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","newCards","filter","event"],"mappings":"8TAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,WAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,CACA,MAAOC,CAAAA,GAAP,KAAgB,iBAAhB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,uBAA7B,CACA,MAAOC,CAAAA,eAAP,KAA4B,sBAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,oBAA1B,C,wFAGA,QAASC,CAAAA,GAAT,EAAe,CAEb,oBAA4DX,KAAK,CAACY,QAAN,CAAe,KAAf,CAA5D,oDAAOC,sBAAP,qBAA+BC,yBAA/B,qBACA,qBAAsDd,KAAK,CAACY,QAAN,CAAe,KAAf,CAAtD,qDAAOG,mBAAP,qBAA4BC,sBAA5B,qBACA,qBAA0DhB,KAAK,CAACY,QAAN,CAAe,KAAf,CAA1D,qDAAOK,qBAAP,qBAA8BC,wBAA9B,qBACA,qBAAwClB,KAAK,CAACY,QAAN,CAAe,CAACO,IAAI,CAAE,EAAP,CAAWC,IAAI,CAAE,EAAjB,CAAf,CAAxC,qDAAOC,YAAP,qBAAqBC,eAArB,qBAEA,qBAAsCtB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAtC,sDAAOW,WAAP,sBAAoBC,cAApB,sBACA,sBAA0BxB,KAAK,CAACY,QAAN,CAAe,EAAf,CAA1B,uDAAOa,KAAP,sBAAcC,QAAd,sBAEA;AACA1B,KAAK,CAAC2B,SAAN,CAAgB,UAAM,CACpBpB,GAAG,CAACqB,WAAJ,GACGC,IADH,CACQ,SAACC,QAAD,CAAc,CACpBN,cAAc,CAACM,QAAD,CAAd,CACD,CAHD,EAIGC,KAJH,CAIS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CANH,EAOAzB,GAAG,CAAC4B,eAAJ,GACGN,IADH,CACQ,SAACJ,KAAD,CAAW,CACjBC,QAAQ,CAACD,KAAD,CAAR,CACD,CAHD,EAIGM,KAJH,CAIS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CANH,EAOD,CAfD,CAeG,EAfH,EAiBA,QAASI,CAAAA,sBAAT,EAAkC,CAChCtB,yBAAyB,CAAC,IAAD,CAAzB,CACD,CAED,QAASuB,CAAAA,mBAAT,EAA+B,CAC7BrB,sBAAsB,CAAC,IAAD,CAAtB,CACD,CAED,QAASsB,CAAAA,qBAAT,EAAiC,CAC/BpB,wBAAwB,CAAC,IAAD,CAAxB,CACD,CAED,QAASqB,CAAAA,cAAT,EAA0B,CACxBzB,yBAAyB,CAAC,KAAD,CAAzB,CACAE,sBAAsB,CAAC,KAAD,CAAtB,CACAE,wBAAwB,CAAC,KAAD,CAAxB,CACAI,eAAe,CAAC,CAACH,IAAI,CAAE,EAAP,CAAWC,IAAI,CAAE,EAAjB,CAAD,CAAf,CACD,CAED,QAASoB,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CAC7BnB,eAAe,CAACmB,IAAD,CAAf,CACD,CAED;AACA,QAASC,CAAAA,gBAAT,CAA0BC,IAA1B,CAAgC,CAC9BpC,GAAG,CAACqC,YAAJ,CAAiBD,IAAjB,EACGd,IADH,CACQ,SAACc,IAAD,CAAU,CACdnB,cAAc,CAACmB,IAAD,CAAd,CACAJ,cAAc,GACf,CAJH,EAKGR,KALH,CAKS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CAPH,EAQD,CAED,QAASa,CAAAA,kBAAT,CAA4BC,MAA5B,CAAoC,CAClCvC,GAAG,CAACwC,UAAJ,CAAeD,MAAf,EACGjB,IADH,CACQ,SAACiB,MAAD,CAAY,CAChBtB,cAAc,CAACsB,MAAD,CAAd,CACAP,cAAc,GACf,CAJH,EAKGR,KALH,CAKS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CAPH,EAQD,CAED,QAASgB,CAAAA,oBAAT,CAA8BC,OAA9B,CAAuC,CACrC1C,GAAG,CAAC2C,WAAJ,CAAgBD,OAAhB,EACGpB,IADH,CACQ,SAACoB,OAAD,CAAa,CACjBvB,QAAQ,EAAEuB,OAAF,4BAAcxB,KAAd,GAAR,CACAc,cAAc,GACf,CAJH,EAKGR,KALH,CAKS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CAPH,EAQD,CAGD,QAASmB,CAAAA,cAAT,CAAwBV,IAAxB,CAA8B,CAC5B;AACA,GAAMW,CAAAA,OAAO,CAAGX,IAAI,CAACY,KAAL,CAAWC,IAAX,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUjC,WAAW,CAACiC,GAA1B,EAAjB,CAAhB,CACA;AACAjD,GAAG,CAACkD,oBAAJ,CAAyBhB,IAAI,CAACe,GAA9B,CAAmC,CAACJ,OAApC,EACGvB,IADH,CACQ,SAACoB,OAAD,CAAa,CACjBvB,QAAQ,CAAC,SAACgC,KAAD,QAAWA,CAAAA,KAAK,CAACC,GAAN,CAAU,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACJ,GAAF,GAAUf,IAAI,CAACe,GAAf,CAAqBP,OAArB,CAA+BW,CAAtC,EAAV,CAAX,EAAD,CAAR,CACD,CAHH,EAIG7B,KAJH,CAIS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CANH,EAOH,CAGC,QAAS6B,CAAAA,gBAAT,CAA0BpB,IAA1B,CAAgC,CAC9BlC,GAAG,CAACuD,UAAJ,CAAerB,IAAI,CAACe,GAApB,EACC3B,IADD,CACM,UAAM,CACV,GAAMkC,CAAAA,QAAQ,CAAGtC,KAAK,CAACuC,MAAN,CAAa,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACT,GAAN,GAAcf,IAAI,CAACe,GAA9B,EAAb,CAAjB,CACE9B,QAAQ,CAACqC,QAAD,CAAR,CACH,CAJD,EAKChC,KALD,CAKO,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,iDAAuBF,GAAvB,GACD,CAPD,EAQD,CAED,mBACE,KAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAIT,WAAtC,uBACE,aAAK,SAAS,CAAC,UAAf,wBACE,aAAK,SAAS,CAAC,MAAf,wBACE,KAAC,MAAD,IADF,cAEE,KAAC,IAAD,EACE,aAAa,CAAGa,sBADlB,CAEE,YAAY,CAAGE,qBAFjB,CAGE,UAAU,CAAGD,mBAHf,CAIE,WAAW,CAAGG,eAJhB,CAKE,UAAU,CAAGW,cALf,CAME,YAAY,CAAGU,gBANjB,CAOE,KAAK,CAAGpC,KAPV,EAFF,cAWE,KAAC,MAAD,IAXF,GADF,cAcE,KAAC,gBAAkB;AAAnB,EACE,MAAM,CAAEZ,sBADV,CAEE,OAAO,CAAE0B,cAFX,CAGE,YAAY,CAAEG,gBAHhB,EAdF,cAkBE,KAAC,aAAc;AAAf,EACE,MAAM,CAAE3B,mBADV,CAEE,OAAO,CAAEwB,cAFX,CAGE,UAAU,CAAES,oBAHd,EAlBF,cAuBE,KAAC,aAAc;AAAf,EACE,IAAI,CAAC,QADP,CAEE,QAAQ,CAAC,aAFX,CAGE,KAAK,CAAC,0DAHR,CAIE,MAAM,CAAC,QAJT,CAKE,IAAI,CAAC,cALP,EAvBF,cA8BE,KAAC,eAAgB;AAAjB,EACE,MAAM,CAAE/B,qBADV,CAEE,OAAO,CAAEsB,cAFX,CAGE,cAAc,CAAEM,kBAHlB,EA9BF,cAkCE,KAAC,UAAW;AAAZ,EACG,IAAI,CAAExB,YADT,CAEG,OAAO,CAAEkB,cAFZ,EAlCF,GADF,EADF,CA2CD,CAED,cAAe5B,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\"\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({link: \"\", name: \"\"});\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  // Получаем данные с сервера (Данные профиля + данные карточек)\n  React.useEffect(() => {\n    api.getUserInfo() \n      .then((userData) => {\n      setCurrentUser(userData);\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n    api.getInitialCards() \n      .then((cards) => {\n      setCards(cards)\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }, [])\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({link: \"\", name: \"\"});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // отправляем данные профиля на сервер\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCards(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  \n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n}\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then(() => {\n      const newCards = cards.filter((event) => event._id !== card._id);\n        setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n  }\n  \n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n      <div className=\"contents\">\n        <div className=\"page\">\n          <Header/>\n          <Main \n            onEditProfile={ handleEditProfileClick }\n            onEditAvatar={ handleEditAvatarClick }\n            onAddPlace={ handleAddPlaceClick }\n            onCardClick={ handleCardClick }\n            onCardLike={ handleCardLike }\n            onCardDelete={ handleCardDelete }\n            cards={ cards }\n           />\n          <Footer/>\n        </div>\n        <EditProfilePopup  // попап редактирования профиля\n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup // попап добавления карточек\n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} \n          />\n        <PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n          name=\"delete\"\n          nameForm=\"delete-form\"\n          title=\"Вы уверены?\"\n          button=\"delete\"\n          text=\"Да\"\n        />\n        <EditAvatarPopup // попап аватара\n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup // попап фулскрин картинки\n           card={selectedCard}\n           onClose={closeAllPopups}\n        />\n      </div> \n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}