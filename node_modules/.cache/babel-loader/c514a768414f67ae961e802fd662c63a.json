{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  console.log(props);\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]); // Стейт, в котором содержится значение инпута\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); // Обработчик изменения инпута обновляет стейт\n\n  function handleChangeName(event) {\n    setName(event.target.value);\n  }\n\n  function handleChangeDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm // попап редактирования профиля\n  , {\n    name: \"profile\",\n    nameForm: \"edit-form\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    button: \"save\",\n    text: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"edit-name\",\n      name: \"name\",\n      placeholder: \"\\u0416\\u0430\\u043A-\\u0418\\u0432 \\u041A\\u0443\\u0441\\u0442\\u043E\",\n      className: \"popup__input popup__input_type_name\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\",\n      value: name,\n      onChange: handleChangeName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"edit-description-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"edit-description\",\n      name: \"about\",\n      placeholder: \"\\u0418\\u0441\\u0441\\u043B\\u0435\\u0434\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043E\\u043A\\u0435\\u0430\\u043D\\u0430\",\n      className: \"popup__input popup__input_type_description\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\",\n      value: description,\n      onChange: handleChangeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"edit-description-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"745oKx8RhC6pJ7HnJ8xqbrGwpmE=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","console","log","currentUser","useContext","useEffect","setName","name","setDescription","about","useState","description","handleChangeName","event","target","value","handleChangeDescription","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,WAAW,GAAGP,KAAK,CAACQ,UAAN,CAAiBN,kBAAjB,CAApB,CAF+B,CAE2B;AAE5D;AACA;;AACAF,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACH,WAAW,CAACI,IAAb,CAAP;AACAC,IAAAA,cAAc,CAACL,WAAW,CAACM,KAAb,CAAd;AACD,GAHD,EAGG,CAACN,WAAD,CAHH,EANiC,CAW/B;;AACA,QAAM,CAACI,IAAD,EAAOD,OAAP,IAAkBV,KAAK,CAACc,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcH,cAAd,IAAiCZ,KAAK,CAACc,QAAN,CAAe,EAAf,CAAvC,CAb+B,CAe/B;;AACA,WAASE,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BP,IAAAA,OAAO,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASC,uBAAT,CAAiCH,KAAjC,EAAwC;AACtCL,IAAAA,cAAc,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD;;AAED,sBACE,QAAC,aAAD,CAAe;AAAf;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAC,WAFX;AAGE,IAAA,KAAK,EAAC,2HAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,IAAI,EAAC,wDALP;AAME,IAAA,MAAM,EAAEf,KAAK,CAACiB,MANhB;AAOE,IAAA,OAAO,EAAEjB,KAAK,CAACkB,OAPjB;AAAA,4BASE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,gEAJd;AAKE,MAAA,SAAS,EAAC,qCALZ;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,SAAS,EAAC,IARZ;AASE,MAAA,KAAK,EAAEX,IATT;AAUE,MAAA,QAAQ,EAAEK;AAVZ;AAAA;AAAA;AAAA;AAAA,YATF,eAoBE;AAAM,MAAA,EAAE,EAAC,wBAAT;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YApBF,eAqBE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,kBAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,WAAW,EAAC,qHAJd;AAKE,MAAA,SAAS,EAAC,4CALZ;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,SAAS,EAAC,KARZ;AASE,MAAA,KAAK,EAAED,WATT;AAUE,MAAA,QAAQ,EAAEK;AAVZ;AAAA;AAAA;AAAA;AAAA,YArBF,eAgCE;AAAM,MAAA,EAAE,EAAC,wBAAT;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GA5DQjB,gB;;KAAAA,gB;AA8DT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction EditProfilePopup(props) {\n  console.log(props)\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n\n// После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\nReact.useEffect(() => {\n  setName(currentUser.name);\n  setDescription(currentUser.about);\n}, [currentUser]);\n\n  // Стейт, в котором содержится значение инпута\n  const [name, setName] = React.useState('');\n  const [description, setDescription ] = React.useState('');\n\n  // Обработчик изменения инпута обновляет стейт\n  function handleChangeName(event) {\n    setName(event.target.value);\n  }\n  \n  function handleChangeDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  return(\n    <PopupWithForm // попап редактирования профиля\n      name=\"profile\"\n      nameForm=\"edit-form\"\n      title=\"Редактировать профиль\"\n      button=\"save\"\n      text=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n    >\n      <input\n        type=\"text\"\n        id=\"edit-name\"\n        name=\"name\"\n        placeholder=\"Жак-Ив Кусто\"\n        className=\"popup__input popup__input_type_name\" \n        required  \n        minLength=\"2\" \n        maxLength=\"40\"\n        value={name} \n        onChange={handleChangeName}/>\n      <span id=\"edit-description-error\" className=\"error\"></span>\n      <input\n        type=\"text\" \n        id=\"edit-description\" \n        name=\"about\" \n        placeholder=\"Исследователь океана\" \n        className=\"popup__input popup__input_type_description\" \n        required  \n        minLength=\"2\" \n        maxLength=\"200\"\n        value={description} \n        onChange={handleChangeDescription} />\n      <span id=\"edit-description-error\" className=\"error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}