{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/AddPlacePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddPlacePopup(props) {\n  _s();\n\n  // Стейт, в котором содержится значение инпута\n  const [nameCard, setNameCard] = React.useState('');\n  const [linkCard, setLinkCard] = React.useState(''); // при отерытии попапа поле будет пустое\n\n  React.useEffect(() => {\n    setNameCard(\"\");\n    setLinkCard(\"\");\n  }, [props.isOpen]); //Если у хука не указаны зависимости, он будет вызван после каждого рендера и мы не сможем нисего написавть в поле\n  // Обработчик изменения инпута обновляет стейт\n\n  function handleChangeNameCard(event) {\n    setNameCard(event.target.value);\n  }\n\n  function handleChangeLinkCard(event) {\n    setLinkCard(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    // Запрещаем браузеру переходить по адресу формы (перезагружать страницу)\n    event.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onAddPlace({\n      name: nameCard,\n      link: linkCard\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm // попап добавления карточек\n  , {\n    name: \"cards\",\n    nameForm: \"add-form\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    button: \"create\",\n    text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"edit-title\",\n      name: \"title\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      className: \"popup__input popup__input_type_title\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"30\",\n      value: `${nameCard}`,\n      onChange: handleChangeNameCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"edit-title-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      id: \"edit-link\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      className: \"popup__input popup__input_type_link\",\n      required: true,\n      value: `${linkCard}`,\n      onChange: handleChangeLinkCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"edit-link-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddPlacePopup, \"VXl1zznoEzQf6DkhmNdtTfck2Uw=\");\n\n_c = AddPlacePopup;\nexport default AddPlacePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/AddPlacePopup.js"],"names":["React","PopupWithForm","AddPlacePopup","props","nameCard","setNameCard","useState","linkCard","setLinkCard","useEffect","isOpen","handleChangeNameCard","event","target","value","handleChangeLinkCard","handleSubmit","preventDefault","onAddPlace","name","link","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAG7B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA2BR,KAAK,CAACM,QAAN,CAAe,EAAf,CAAjC,CAL6B,CAO7B;;AACAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBJ,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAHD,EAGG,CAACL,KAAK,CAACO,MAAP,CAHH,EAR6B,CAWT;AAEpB;;AACA,WAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnCP,IAAAA,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;;AAED,WAASC,oBAAT,CAA8BH,KAA9B,EAAqC;AACnCJ,IAAAA,WAAW,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;;AAED,WAASE,YAAT,CAAsBJ,KAAtB,EAA6B;AAC3B;AACAA,IAAAA,KAAK,CAACK,cAAN,GAF2B,CAI3B;;AACAd,IAAAA,KAAK,CAACe,UAAN,CAAiB;AACfC,MAAAA,IAAI,EAAEf,QADS;AAEfgB,MAAAA,IAAI,EAAEb;AAFS,KAAjB;AAID;;AAED,sBACE,QAAC,aAAD,CAAe;AAAf;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,KAAK,EAAC,+DAHR;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,IAAI,EAAC,4CALP;AAME,IAAA,MAAM,EAAEJ,KAAK,CAACO,MANhB;AAOE,IAAA,OAAO,EAAEP,KAAK,CAACkB,OAPjB;AAQE,IAAA,QAAQ,EAAEL,YARZ;AAAA,4BAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,WAAW,EAAC,kDAJd;AAKE,MAAA,SAAS,EAAC,sCALZ;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,SAAS,EAAC,IARZ;AASE,MAAA,KAAK,EAAG,GAAEZ,QAAS,EATrB;AAUE,MAAA,QAAQ,EAAEO;AAVZ;AAAA;AAAA;AAAA;AAAA,YAVF,eAqBE;AAAM,MAAA,EAAE,EAAC,kBAAT;AAA4B,MAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,EAAE,EAAC,WAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,WAAW,EAAC,oGAJd;AAKE,MAAA,SAAS,EAAC,qCALZ;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,KAAK,EAAG,GAAEJ,QAAS,EAPrB;AAQE,MAAA,QAAQ,EAAEQ;AARZ;AAAA;AAAA;AAAA;AAAA,YAtBF,eA+BE;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GApEQb,a;;KAAAA,a;AAsET,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction AddPlacePopup (props) {\n  \n\n  // Стейт, в котором содержится значение инпута\n  const [nameCard, setNameCard] = React.useState('');\n  const [linkCard, setLinkCard ] = React.useState('')\n\n  // при отерытии попапа поле будет пустое\n  React.useEffect(() => {\n    setNameCard(\"\");\n    setLinkCard(\"\");\n  }, [props.isOpen]); //Если у хука не указаны зависимости, он будет вызван после каждого рендера и мы не сможем нисего написавть в поле\n\n  // Обработчик изменения инпута обновляет стейт\n  function handleChangeNameCard(event) {\n    setNameCard(event.target.value);\n  }\n  \n  function handleChangeLinkCard(event) {\n    setLinkCard(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    // Запрещаем браузеру переходить по адресу формы (перезагружать страницу)\n    event.preventDefault();\n  \n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onAddPlace({\n      name: nameCard,\n      link: linkCard,\n    });\n  }\n  \n  return(\n    <PopupWithForm // попап добавления карточек\n      name=\"cards\"\n      nameForm=\"add-form\"\n      title=\"Новое место\"\n      button=\"create\"\n      text=\"Создать\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input \n        type=\"text\" \n        id=\"edit-title\" \n        name=\"title\" \n        placeholder=\"Название\" \n        className=\"popup__input popup__input_type_title\" \n        required  \n        minLength=\"2\" \n        maxLength=\"30\"\n        value={`${nameCard}`} \n        onChange={handleChangeNameCard}/>\n      <span id=\"edit-title-error\" className=\"error\"></span>\n      <input \n        type=\"url\" \n        id=\"edit-link\" \n        name=\"link\" \n        placeholder=\"Ссылка на картинку\" \n        className=\"popup__input popup__input_type_link\" \n        required\n        value={`${linkCard}`} \n        onChange={handleChangeLinkCard} />\n      <span id=\"edit-link-error\" className=\"error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup\n"]},"metadata":{},"sourceType":"module"}