{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(_ref) {\n  _s();\n\n  let {\n    card,\n    onCardClick,\n    onCardLike,\n    onCardDelete\n  } = _ref;\n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n  //   удаление //\n  // Определяем, являемся ли мы владельцем текущей карточки\n\n  const isOwn = card.owner._id === currentUser._id; // Создаём переменную, которую после зададим в `className` для кнопки удаления\n\n  const cardDeleteButtonClassName = `element__delete ${isOwn ? 'element__delete' : 'element__delete_invisible'}`; //   лайк //\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n\n  const isLiked = card.likes.some(like => like._id === currentUser._id); // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_black' : 'element__like'}`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike;\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: card.link,\n      className: \"element__foto\",\n      alt: card.name,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: cardDeleteButtonClassName,\n      onClick: handleDeleteClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"element__name\",\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element__container-like\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: cardLikeButtonClassName,\n          onClick: handleLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"element__like-num\",\n          children: card.likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","like","cardLikeButtonClassName","handleClick","handleLike","handleDeleteClick","link","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;;;AAEA,SAASC,IAAT,OAA6D;AAAA;;AAAA,MAA/C;AAACC,IAAAA,IAAD;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,GAA+C;AAC3D,QAAMC,WAAW,GAAGP,KAAK,CAACQ,UAAN,CAAiBP,kBAAjB,CAApB,CAD2D,CACD;AAE7C;AACb;;AACA,QAAMQ,KAAK,GAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,KAAmBJ,WAAW,CAACI,GAA7C,CAL2D,CAM3D;;AACA,QAAMC,yBAAyB,GAC5B,mBAAkBH,KAAK,GAAG,iBAAH,GAAuB,2BAA4B,EAD7E,CAP2D,CAWhD;AACX;;AACA,QAAMI,OAAO,GAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgBC,IAAI,IAAIA,IAAI,CAACL,GAAL,KAAaJ,WAAW,CAACI,GAAjD,CAAhB,CAb2D,CAc3D;;AACA,QAAMM,uBAAuB,GAAI,iBAAgBJ,OAAO,GAAG,qBAAH,GAA2B,eAAgB,EAAnG;;AAEA,WAASK,WAAT,GAAuB;AACrBd,IAAAA,WAAW,CAACD,IAAD,CAAX;AACD;;AAED,WAASgB,UAAT,GAAsB;AACpBd,IAAAA,UAAU;AACX;;AAED,WAASe,iBAAT,GAA6B;AAC3Bd,IAAAA,YAAY,CAACH,IAAD,CAAZ;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACkB,IAAf;AAAqB,MAAA,SAAS,EAAC,eAA/B;AAA+C,MAAA,GAAG,EAAElB,IAAI,CAACmB,IAAzD;AAA+D,MAAA,OAAO,EAAEJ;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAEN,yBAAjC;AAA4D,MAAA,OAAO,EAAEQ;AAArE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,eAAb;AAAA,kBAA8BjB,IAAI,CAACmB;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEL,uBAAjC;AAA0D,UAAA,OAAO,EAAEE;AAAnE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA,oBAAqChB,IAAI,CAACW;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA1CQZ,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) { \n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n\n               //   удаление //\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `element__delete ${isOwn ? 'element__delete' : 'element__delete_invisible'}`\n  );\n\n             //   лайк //\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(like => like._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${isLiked ? 'element__like_black' : 'element__like'}`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card)\n  }\n\n  return (\n    <li className=\"element\">\n      <img src={card.link} className=\"element__foto\" alt={card.name} onClick={handleClick}/>\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <div className=\"element__description\">\n        <p className=\"element__name\">{card.name}</p>\n        <div className=\"element__container-like\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLike}></button>\n          <span className=\"element__like-num\">{card.likes}</span>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}