{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\"; // импортируем HOC\n\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: \"\",\n    name: \"\"\n  });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]); // Получаем данные с сервера (Данные профиля + данные карточек)\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({\n      link: \"\",\n      name: \"\"\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // отправляем данные профиля на сервер\n\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user).then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCards(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(event => event._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [\"  // \\u0421\\u043D\\u043E\\u0432\\u0430 \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u044F\\u0435\\u043C, \\u0435\\u0441\\u0442\\u044C \\u043B\\u0438 \\u0443\\u0436\\u0435 \\u043B\\u0430\\u0439\\u043A \\u043D\\u0430 \\u044D\\u0442\\u043E\\u0439 \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0435\", /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/\",\n            component: Main,\n            onEditProfile: handleEditProfileClick,\n            onEditAvatar: handleEditAvatarClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup // попап редактирования профиля\n      , {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup // попап добавления карточек\n      , {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n      , {\n        name: \"delete\",\n        nameForm: \"delete-form\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"delete\",\n        text: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup // попап аватара\n      , {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup // попап фулскрин картинки\n      , {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DFoTDk3LMOJP676oUMlOC/vn5lE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sasha/Desktop/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","ProtectedRoute","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","cards","setCards","useEffect","getUserInfo","then","userData","catch","err","console","log","getInitialCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","newCard","addNewCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","newCards","filter","event"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\"; // импортируем HOC\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\"\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({link: \"\", name: \"\"});\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  // Получаем данные с сервера (Данные профиля + данные карточек)\n  React.useEffect(() => {\n    api.getUserInfo() \n      .then((userData) => {\n      setCurrentUser(userData);\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n    api.getInitialCards() \n      .then((cards) => {\n      setCards(cards)\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }, [])\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({link: \"\", name: \"\"});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // отправляем данные профиля на сервер\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCards(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  \n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n}\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then(() => {\n      const newCards = cards.filter((event) => event._id !== card._id);\n        setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n  }\n  \n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n      <div className=\"contents\">\n        <div className=\"page\">\n          <Header/> \n          <Switch>  // Снова проверяем, есть ли уже лайк на этой карточке\n          <ProtectedRoute\n           exact path=\"/\"\n            component={Main}\n            onEditProfile={ handleEditProfileClick }\n            onEditAvatar={ handleEditAvatarClick }\n            onAddPlace={ handleAddPlaceClick }\n            onCardClick={ handleCardClick }\n            onCardLike={ handleCardLike }\n            onCardDelete={ handleCardDelete }\n            cards={ cards }\n          />\n          \n          \n\n          </Switch>\n\n          \n          <Footer/>\n        </div>\n        <EditProfilePopup  // попап редактирования профиля\n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup // попап добавления карточек\n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} \n          />\n        <PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n          name=\"delete\"\n          nameForm=\"delete-form\"\n          title=\"Вы уверены?\"\n          button=\"delete\"\n          text=\"Да\"\n        />\n        <EditAvatarPopup // попап аватара\n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup // попап фулскрин картинки\n           card={selectedCard}\n           onClose={closeAllPopups}\n        />\n      </div> \n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}