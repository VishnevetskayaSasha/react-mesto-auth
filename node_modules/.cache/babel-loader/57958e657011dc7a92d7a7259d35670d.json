{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\";\nimport auth from \"../utils/Auth.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport ProtectedRoute from \"./ProtectedRoute\"; // импортируем HOC\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: \"\",\n    name: \"\"\n  });\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [isSuccessfullyTooltip, setIsSuccessfullyTooltip] = React.useState(false);\n  const [isLogOn, setIsLogOn] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userPassword, setUserPassword] = React.useState(\"\");\n  const history = useHistory(); // Получаем данные с сервера (Данные профиля + данные карточек)\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userData => {\n      setCurrentUser(userData);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsInfoTooltipPopupOpen(false);\n    setSelectedCard({\n      link: \"\",\n      name: \"\"\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // отправляем данные на сервер\n\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user).then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCards(newCard).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(event => event._id !== card._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  } ////////\n\n\n  React.useEffect(() => {\n    handleIsToken();\n    setIsSuccessfullyTooltip(false);\n  }, []);\n\n  function handleIsToken() {\n    const jwt = localStorage.getItem(\"jwt\");\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        setUserEmail(res.data.email);\n        setIsLogOn(true);\n        history.push(\"/\");\n      }).catch(() => {\n        setIsSuccessfullyTooltip(false);\n        setIsInfoTooltipPopupOpen(true);\n      });\n    } else {\n      return;\n    }\n  }\n\n  function handleIsRegistration(data) {\n    auth.register(data).then(res => {\n      setUserEmail(res.data.email);\n      setUserPassword(data.password);\n      setIsSuccessfullyTooltip(true);\n      setIsInfoTooltipPopupOpen(true);\n    }).catch(() => {\n      setIsSuccessfullyTooltip(false);\n      setIsInfoTooltipPopupOpen(true);\n    });\n  }\n\n  function handleIsLogin(data) {\n    auth.login(data).then(res => {\n      localStorage.setItem(\"jwt\", res.token);\n      handleIsToken();\n    }).catch(() => {\n      setIsSuccessfullyTooltip(false);\n      setIsInfoTooltipPopupOpen(true);\n    });\n  }\n\n  function handleSignOut() {\n    setIsLogOn(false);\n    history.push(\"/sign-in\");\n    localStorage.removeItem(\"jwt\");\n    setUserEmail(\"\");\n    setUserPassword(\"\");\n    setIsSuccessfullyTooltip(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          userEmail: userEmail,\n          isLogOn: isLogOn,\n          onSignOut: handleSignOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/\" // Пропс exact гарантирует, что значение пропса path будет сравниваться с путём в URL по принципу полного равенства.\n            ,\n            component: Main,\n            onEditProfile: handleEditProfileClick,\n            onEditAvatar: handleEditAvatarClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards,\n            isLogOn: isLogOn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              onSubmitRegistration: handleIsRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              onSubmitLogin: handleIsLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: /*#__PURE__*/_jsxDEV(Redirect, {\n              to: !isLogOn ? \"/sign-in\" : \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), isLogOn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup // попап редактирования профиля\n      , {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup // попап добавления карточек\n      , {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n      , {\n        name: \"delete\",\n        nameForm: \"delete-form\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"delete\",\n        text: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup // попап аватара\n      , {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup // попап фулскрин картинки\n      , {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip // попап успешная регистрация - ошибка\n      , {\n        isOpen: isInfoTooltipPopupOpen,\n        onClose: closeAllPopups,\n        isSuccessfully: isSuccessfullyTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"THbGY9WU5SwkyXXQUEfsRI7ZNP8=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sasha/Desktop/react-mesto-auth/src/components/App.js"],"names":["React","useEffect","useState","Route","Switch","Redirect","useHistory","Header","Main","Footer","Login","Register","InfoTooltip","PopupWithForm","ImagePopup","CurrentUserContext","api","auth","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","link","name","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","isSuccessfullyTooltip","setIsSuccessfullyTooltip","isLogOn","setIsLogOn","currentUser","setCurrentUser","cards","setCards","userEmail","setUserEmail","userPassword","setUserPassword","history","getUserInfo","then","userData","catch","err","console","log","getInitialCards","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","avatar","editAvatar","handleAddPlaceSubmit","newCard","addNewCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","newCards","filter","event","handleIsToken","jwt","localStorage","getItem","checkToken","res","data","email","push","handleIsRegistration","register","password","handleIsLogin","login","setItem","token","handleSignOut","removeItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport \"../index.css\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\"\nimport auth from \"../utils/Auth.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport ProtectedRoute from \"./ProtectedRoute\"; // импортируем HOC\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({link: \"\", name: \"\"});\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = React.useState(false);\n  const [isSuccessfullyTooltip, setIsSuccessfullyTooltip] = React.useState(false);\n  const [isLogOn, setIsLogOn] = React.useState(false);\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [userEmail, setUserEmail] = React.useState(\"\");\n  const [userPassword, setUserPassword] = React.useState(\"\");\n  const history = useHistory();\n\n  // Получаем данные с сервера (Данные профиля + данные карточек)\n  React.useEffect(() => {\n    api.getUserInfo() \n      .then((userData) => {\n      setCurrentUser(userData);\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n    api.getInitialCards() \n      .then((cards) => {\n      setCards(cards)\n    })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }, [])\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsInfoTooltipPopupOpen(false)\n    setSelectedCard({link: \"\", name: \"\"});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // отправляем данные на сервер\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleAddPlaceSubmit(newCard) {\n    api.addNewCards(newCard)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  \n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n}\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n    .then(() => {\n      const newCards = cards.filter((event) => event._id !== card._id);\n        setCards(newCards);\n    })\n    .catch((err) => {\n      console.log(`Ошибка: ${err}`);\n    })\n  }\n\n  ////////\n\n  React.useEffect(() => {\n    handleIsToken();\n    setIsSuccessfullyTooltip(false);\n  }, [])\n\n  function handleIsToken() {\n\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      auth.checkToken(jwt)\n        .then((res) => {\n          setUserEmail(res.data.email);\n          setIsLogOn(true);\n          history.push(\"/\");\n        })\n        .catch(() => {\n          setIsSuccessfullyTooltip(false);\n          setIsInfoTooltipPopupOpen(true);\n        })\n    } else {\n\n      return;\n    }\n  }\n\n  function handleIsRegistration(data) {\n    auth.register(data)\n      .then((res) => {\n        setUserEmail(res.data.email);\n        setUserPassword(data.password);\n        setIsSuccessfullyTooltip(true);\n        setIsInfoTooltipPopupOpen(true);\n      })\n      .catch(() => {\n        setIsSuccessfullyTooltip(false);\n        setIsInfoTooltipPopupOpen(true);\n      })\n  }\n\n  function handleIsLogin(data) {\n    auth.login(data)\n      .then((res) => {\n        localStorage.setItem(\"jwt\", res.token);\n        handleIsToken();\n      })\n      .catch(() => {\n        setIsSuccessfullyTooltip(false);\n        setIsInfoTooltipPopupOpen(true);\n      })\n  }\n\n  function handleSignOut() {\n    setIsLogOn(false);\n    history.push(\"/sign-in\");\n    localStorage.removeItem(\"jwt\");\n    setUserEmail(\"\");\n    setUserPassword(\"\");\n    setIsSuccessfullyTooltip(null);\n  }\n\n  \n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n      <div className=\"contents\">\n        <div className=\"page\">\n          <Header\n            userEmail={userEmail}\n            isLogOn={isLogOn}\n            onSignOut={handleSignOut}\n          /> \n          <Switch>  \n            <ProtectedRoute\n              exact path=\"/\" // Пропс exact гарантирует, что значение пропса path будет сравниваться с путём в URL по принципу полного равенства.\n              component={Main}\n              onEditProfile={ handleEditProfileClick }\n              onEditAvatar={ handleEditAvatarClick }\n              onAddPlace={ handleAddPlaceClick }\n              onCardClick={ handleCardClick }\n              onCardLike={ handleCardLike }\n              onCardDelete={ handleCardDelete }\n              cards={ cards }\n              isLogOn={isLogOn}\n            />\n            <Route path=\"/sign-up\">\n              <Register\n               onSubmitRegistration={handleIsRegistration}\n              />\n            </Route>\n            <Route path=\"/sign-in\">\n              <Login\n              onSubmitLogin={handleIsLogin}\n              />\n            </Route>\n            <Route>\n              <Redirect to={!isLogOn ? \"/sign-in\" : \"/\"} />\n            </Route>\n          </Switch>\n          {isLogOn && <Footer />}\n        </div>\n        <EditProfilePopup  // попап редактирования профиля\n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n        <AddPlacePopup // попап добавления карточек\n          isOpen={isAddPlacePopupOpen} \n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} \n          />\n        <PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n          name=\"delete\"\n          nameForm=\"delete-form\"\n          title=\"Вы уверены?\"\n          button=\"delete\"\n          text=\"Да\"\n        />\n        <EditAvatarPopup // попап аватара\n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup // попап фулскрин картинки\n           card={selectedCard}\n           onClose={closeAllPopups}\n        />\n        <InfoTooltip // попап успешная регистрация - ошибка\n          isOpen={isInfoTooltipPopupOpen}\n          onClose={closeAllPopups}\n          isSuccessfully={isSuccessfullyTooltip}\n        />\n      </div> \n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}