{"ast":null,"code":"import React from\"react\";import CurrentUserContext from\"../contexts/CurrentUserContext.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Card(_ref){var card=_ref.card,onCardClick=_ref.onCardClick,onCardLike=_ref.onCardLike,onCardDelete=_ref.onCardDelete;var currentUser=React.useContext(CurrentUserContext);// Подписываемся на контекст CurrentUserContext\n//   удаление //\n// Определяем, являемся ли мы владельцем текущей карточки\nvar isOwn=card.owner._id===currentUser._id;// Создаём переменную, которую после зададим в `className` для кнопки удаления\nvar cardDeleteButtonClassName=\"element__delete \".concat(isOwn?\"element__delete\":\"element__delete_invisible\");//   лайк //\n// Определяем, есть ли у карточки лайк, поставленный текущим пользователем\nvar isLiked=card.likes.some(function(i){return i._id===currentUser._id;});// Создаём переменную, которую после зададим в `className` для кнопки лайка\nvar cardLikeButtonClassName=\"element__like \".concat(isLiked?\"element__like_black\":\"element__like\");function handleClick(){onCardClick(card);}function handleLike(){onCardLike(card);}function handleDeleteClick(){onCardDelete(card);}return/*#__PURE__*/_jsxs(\"li\",{className:\"element\",children:[/*#__PURE__*/_jsx(\"img\",{src:card.link,className:\"element__foto\",alt:card.name,onClick:handleClick}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:cardDeleteButtonClassName,onClick:handleDeleteClick}),/*#__PURE__*/_jsxs(\"div\",{className:\"element__description\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"element__name\",children:card.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"element__container-like\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:cardLikeButtonClassName,onClick:handleLike}),/*#__PURE__*/_jsx(\"span\",{className:\"element__like-num\",children:card.likes.length})]})]})]});}export default Card;","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/Card.js"],"names":["React","CurrentUserContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","handleLike","handleDeleteClick","link","name","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,mCAA/B,C,wFAEA,QAASC,CAAAA,IAAT,MAA6D,IAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,WAAwC,MAAxCA,WAAwC,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,YAAe,MAAfA,YAAe,CAC3D,GAAMC,CAAAA,WAAW,CAAGP,KAAK,CAACQ,UAAN,CAAiBP,kBAAjB,CAApB,CAA0D;AAE7C;AACb;AACA,GAAMQ,CAAAA,KAAK,CAAGN,IAAI,CAACO,KAAL,CAAWC,GAAX,GAAmBJ,WAAW,CAACI,GAA7C,CACA;AACA,GAAMC,CAAAA,yBAAyB,2BACVH,KAAK,CAAG,iBAAH,CAAuB,2BADlB,CAA/B,CAIW;AACX;AACA,GAAMI,CAAAA,OAAO,CAAGV,IAAI,CAACW,KAAL,CAAWC,IAAX,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACL,GAAF,GAAUJ,WAAW,CAACI,GAA1B,EAAjB,CAAhB,CACA;AACA,GAAMM,CAAAA,uBAAuB,yBAAoBJ,OAAO,CAAG,qBAAH,CAA2B,eAAtD,CAA7B,CAEA,QAASK,CAAAA,WAAT,EAAuB,CACrBd,WAAW,CAACD,IAAD,CAAX,CACD,CAED,QAASgB,CAAAA,UAAT,EAAsB,CACpBd,UAAU,CAACF,IAAD,CAAV,CACD,CAED,QAASiB,CAAAA,iBAAT,EAA6B,CAC3Bd,YAAY,CAACH,IAAD,CAAZ,CACD,CAED,mBACE,YAAI,SAAS,CAAC,SAAd,wBACE,YAAK,GAAG,CAAEA,IAAI,CAACkB,IAAf,CAAqB,SAAS,CAAC,eAA/B,CAA+C,GAAG,CAAElB,IAAI,CAACmB,IAAzD,CAA+D,OAAO,CAAEJ,WAAxE,EADF,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEN,yBAAjC,CAA4D,OAAO,CAAEQ,iBAArE,EAFF,cAGE,aAAK,SAAS,CAAC,sBAAf,wBACE,UAAG,SAAS,CAAC,eAAb,UAA8BjB,IAAI,CAACmB,IAAnC,EADF,cAEE,aAAK,SAAS,CAAC,yBAAf,wBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAEL,uBAAjC,CAA0D,OAAO,CAAEE,UAAnE,EADF,cAEE,aAAM,SAAS,CAAC,mBAAhB,UAAqChB,IAAI,CAACW,KAAL,CAAWS,MAAhD,EAFF,GAFF,GAHF,GADF,CAaD,CAED,cAAerB,CAAAA,IAAf","sourcesContent":["import React from \"react\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) { \n  const currentUser = React.useContext(CurrentUserContext); // Подписываемся на контекст CurrentUserContext\n\n               //   удаление //\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n  // Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `element__delete ${isOwn ? \"element__delete\" : \"element__delete_invisible\"}`\n  );\n\n             //   лайк //\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `element__like ${isLiked ? \"element__like_black\" : \"element__like\"}`;\n\n  function handleClick() {\n    onCardClick(card);\n  }\n\n  function handleLike() {\n    onCardLike(card)\n  }\n\n  function handleDeleteClick() {\n    onCardDelete(card)\n  }\n\n  return (\n    <li className=\"element\">\n      <img src={card.link} className=\"element__foto\" alt={card.name} onClick={handleClick}/>\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n      <div className=\"element__description\">\n        <p className=\"element__name\">{card.name}</p>\n        <div className=\"element__container-like\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLike}></button>\n          <span className=\"element__like-num\">{card.likes.length}</span>\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}