{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  console.log(props);\n  const avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(evant) {\n    // Запрещаем браузеру переходить по адресу формы (перезагружать страницу)\n    evant.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value // вызываем нужный метод на поле current объекта\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm // попап аватара\n  , {\n    name: \"avatar\",\n    nameForm: \"avatar-form\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    button: \"save-avatar\",\n    text: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      id: \"edit-avatar-link\",\n      name: \"avatar\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n      className: \"popup__input popup__input_type_avatar\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"edit-avatar-link-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"i3A8oX/ZqNHll67C7LWBaRG0gLQ=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","EditAvatarPopup","props","console","log","avatarRef","useRef","useEffect","setName","currentUser","name","setDescription","about","handleSubmit","evant","preventDefault","onUpdateAvatar","avatar","current","value","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,SAAS,GAAGN,KAAK,CAACO,MAAN,EAAlB,CAF8B,CAEI;;AAElCP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO,CAACC,WAAW,CAACC,IAAb,CAAP;AACAC,IAAAA,cAAc,CAACF,WAAW,CAACG,KAAb,CAAd;AACD,GAHD,EAGG,CAACH,WAAD,CAHH;;AAKA,WAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF2B,CAI3B;;AACAb,IAAAA,KAAK,CAACc,cAAN,CAAqB;AACnBC,MAAAA,MAAM,EAAEZ,SAAS,CAACa,OAAV,CAAkBC,KADP,CACa;;AADb,KAArB;AAKD;;AAED,sBACE,QAAC,aAAD,CAAe;AAAf;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,QAAQ,EAAC,aAFX;AAGE,IAAA,KAAK,EAAC,uFAHR;AAIE,IAAA,MAAM,EAAC,aAJT;AAKE,IAAA,IAAI,EAAC,wDALP;AAME,IAAA,MAAM,EAAEjB,KAAK,CAACkB,MANhB;AAOE,IAAA,OAAO,EAAElB,KAAK,CAACmB,OAPjB;AAQE,IAAA,QAAQ,EAAER,YARZ;AAAA,4BAUE;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,EAAE,EAAC,kBAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,WAAW,EAAC,wFAJd;AAKE,MAAA,SAAS,EAAC,uCALZ;AAME,MAAA,QAAQ;AANV;AAAA;AAAA;AAAA;AAAA,YAVF,eAiBI;AAAM,MAAA,EAAE,EAAC,wBAAT;AAAkC,MAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CQZ,e;;KAAAA,e;AA4CT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm.js\";\n\nfunction EditAvatarPopup(props) {\n  console.log(props)\n  const avatarRef = React.useRef(); // записываем объект, возвращаемый хуком, в переменную\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(evant) {\n    // Запрещаем браузеру переходить по адресу формы (перезагружать страницу)\n    evant.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateAvatar({\n      avatar: avatarRef.current.value // вызываем нужный метод на поле current объекта\n    })\n  \n    \n  }\n\n  return (\n    <PopupWithForm // попап аватара\n      name=\"avatar\"\n      nameForm=\"avatar-form\"\n      title=\"Обновить аватар\"\n      button=\"save-avatar\"\n      text=\"Сохранить\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <input \n        type=\"url\" \n        id=\"edit-avatar-link\" \n        name=\"avatar\" \n        placeholder=\"Ссылка на аватар\" \n        className=\"popup__input popup__input_type_avatar\" \n        required/>\n        <span id=\"edit-avatar-link-error\" className=\"error\"></span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup"]},"metadata":{},"sourceType":"module"}