{"ast":null,"code":"import _classCallCheck from\"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._url=config.url;this._headers=config.headers;}// отдельно выносим проверку, чтоб не писать ее каждый раз\n_createClass(Api,[{key:\"_checkLineOk\",value:function _checkLineOk(responce){if(responce.ok){// если у объекта responce поле ок = истина\nreturn responce.json();// тогла возвращаем реальные данные (если не написать return в следующий промис не передадутся данные)\n}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(responce,\" \"));// если статус не ок, возвращаем Promise.rejec (переводим в значение rejected (отклонено))\n}// получение данных профиля \n},{key:\"getUserInfo\",value:function getUserInfo(){var _this=this;// усли fetch ничего не возвращает, по умолчанию он вернет underfined\nreturn fetch(\"\".concat(this._url,\"users/me\"),{// первый аргумент - куда направляем запрос\n// второй аргумент - объект с настройками\nmethod:\"GET\",// поумолчанию метод всегда GET, но лучше указывать, что б было явно видно\nheaders:this._headers}).then(function(responce){return _this._checkLineOk(responce);});//если сервер хоть чем-то ответил (даже статус 400), значит успешно, если сервер ничем не ответил, тогда fetch перейдет в значение rejected и мы перейдем в блок catch\n}// получение карточек \n},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(\"\".concat(this._url,\"cards\"),{method:\"GET\",headers:this._headers}).then(function(responce){return _this2._checkLineOk(responce);});}// редактирование данных профиля\n},{key:\"editUserInfo\",value:function editUserInfo(data){var _this3=this;//чтобы передать данные на сервер нам необходимо по нашему api передавать в боди эти данные. \nreturn fetch(\"\".concat(this._url,\"users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(function(responce){return _this3._checkLineOk(responce);});}// редактирование аватара \n},{key:\"editAvatar\",value:function editAvatar(data){var _this4=this;return fetch(\"\".concat(this._url,\"users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(function(responce){return _this4._checkLineOk(responce);});}// добавление новых карточек на сервер\n},{key:\"addNewCards\",value:function addNewCards(data){var _this5=this;return fetch(\"\".concat(this._url,\"cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(function(responce){//console.log(data)\nreturn _this5._checkLineOk(responce);});}// удаление карточки \n},{key:\"deleteCard\",value:function deleteCard(cardId){var _this6=this;return fetch(\"\".concat(this._url,\"cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(function(responce){return _this6._checkLineOk(responce);});}// добавление / удаление лайка\n},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){var _this7=this;return fetch(\"\".concat(this._url,\"cards/likes/\").concat(cardId),{method:isLiked?\"PUT\":\"DELETE\",headers:this._headers}).then(function(responce){return _this7._checkLineOk(responce);});}}]);return Api;}();var api=new Api({url:\"https://mesto.nomoreparties.co/v1/cohort-30/\",headers:{'Content-Type':'application/json',// наш сервер ждет именно эту строчку (данные в формате json), некоторым серверам он не нужен для ответа\nauthorization:\"d54a6214-ca5f-4e1d-b1a3-3d2e1fdbd500\"}});export default api;","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/utils/Api.js"],"names":["Api","config","_url","url","_headers","headers","responce","ok","json","Promise","reject","fetch","method","then","_checkLineOk","data","body","JSON","stringify","name","about","avatar","link","cardId","isLiked","api","authorization"],"mappings":"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","sourcesContent":[" class Api {\n  constructor (config) { \n    this._url = config.url;\n    this._headers = config.headers; \n  }\n\n  // отдельно выносим проверку, чтоб не писать ее каждый раз\n  _checkLineOk(responce) {\n    if (responce.ok) {  // если у объекта responce поле ок = истина\n      return responce.json(); // тогла возвращаем реальные данные (если не написать return в следующий промис не передадутся данные)\n    } return Promise.reject(`Ошибка: ${responce} `) // если статус не ок, возвращаем Promise.rejec (переводим в значение rejected (отклонено))\n  }\n\n  // получение данных профиля \n  getUserInfo() { // усли fetch ничего не возвращает, по умолчанию он вернет underfined\n    return fetch(`${this._url}users/me`, { // первый аргумент - куда направляем запрос\n      // второй аргумент - объект с настройками\n      method: \"GET\", // поумолчанию метод всегда GET, но лучше указывать, что б было явно видно\n      headers: this._headers\n    })\n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) //если сервер хоть чем-то ответил (даже статус 400), значит успешно, если сервер ничем не ответил, тогда fetch перейдет в значение rejected и мы перейдем в блок catch\n  }\n\n  // получение карточек \n  getInitialCards() { \n    return fetch(`${this._url}cards`, { \n      method: \"GET\",  \n      headers: this._headers\n    })\n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) \n  }\n\n  // редактирование данных профиля\n  editUserInfo(data) {   //чтобы передать данные на сервер нам необходимо по нашему api передавать в боди эти данные. \n    return fetch(`${this._url}users/me`, { \n      method: \"PATCH\", \n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) \n  }\n\n  // редактирование аватара \n  editAvatar(data) {  \n    return fetch(`${this._url}users/me/avatar`, { \n      method: \"PATCH\", \n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }) \n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) \n  }\n\n  // добавление новых карточек на сервер\n  addNewCards(data) { \n    return fetch(`${this._url}cards`, { \n      method: \"POST\", \n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      }) \n    })\n    .then((responce) => {\n     //console.log(data)\n      return this._checkLineOk(responce)\n    }) \n  }\n\n  // удаление карточки \n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, { \n      method: \"DELETE\", \n      headers: this._headers,\n    })\n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) \n  }\n\n  // добавление / удаление лайка\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: (isLiked ? \"PUT\" : \"DELETE\"),\n      headers: this._headers,\n    })\n    .then((responce) => {\n      return this._checkLineOk(responce)\n    }) \n  }\n  } \n\n  const api = new Api ({\n    url: \"https://mesto.nomoreparties.co/v1/cohort-30/\",\n    headers: {\n      'Content-Type': 'application/json', // наш сервер ждет именно эту строчку (данные в формате json), некоторым серверам он не нужен для ответа\n      authorization: \"d54a6214-ca5f-4e1d-b1a3-3d2e1fdbd500\",\n    } \n  })\n\n  export default api\n"]},"metadata":{},"sourceType":"module"}