{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\";\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({\n    link: '',\n    name: ''\n  });\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    // Получаем данные с сервера (Данные профиля + данные карточек)\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(data => {\n      setCurrentUser({\n        name: data[0].name,\n        about: data[0].about,\n        avatar: data[0].avatar\n      });\n      setCards(data[1]);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []); // второй параметр в хуке указываем пустой массив, чтоб не отправлялось куча запросов, а только один. \n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({\n      link: '',\n      name: ''\n    });\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  } // отправляем данные профиля на сервер\n\n\n  function handleUpdateUser(user) {\n    api.editUserInfo(user).then(user => {\n      setCurrentUser(user);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar).then(avatar => {\n      setCurrentUser(avatar);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(like => like._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    api.removeCard(card._id).then(newCard => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          onEditProfile: handleEditProfileClick,\n          onEditAvatar: handleEditAvatarClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup // попап редактирования профиля\n      , {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm // попап добавления карточек\n      , {\n        name: \"cards\",\n        nameForm: \"add-form\",\n        title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n        button: \"create\",\n        text: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"edit-title\",\n          name: \"title\",\n          placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          className: \"popup__input popup__input_type_title\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"edit-title-error\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          id: \"edit-link\",\n          name: \"link\",\n          placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n          className: \"popup__input popup__input_type_link\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"edit-link-error\",\n          className: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n      , {\n        name: \"delete\",\n        nameForm: \"delete-form\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        button: \"delete\",\n        text: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup // попап аватара\n      , {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup // попап фулскрин картинки\n      , {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OZMN3PGzn3ChsfG3H50Tr+JmzB8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/App.js"],"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","CurrentUserContext","api","EditProfilePopup","EditAvatarPopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","link","name","currentUser","setCurrentUser","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","data","about","avatar","catch","err","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","closeAllPopups","handleCardClick","card","handleUpdateUser","user","editUserInfo","handleUpdateAvatar","editAvatar","handleCardLike","isLiked","likes","some","like","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","isOwn","owner","removeCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext.js\";\nimport api from \"../utils/Api.js\"\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({link: '', name: ''});\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n\nReact.useEffect(() => {\n  // Получаем данные с сервера (Данные профиля + данные карточек)\n  Promise.all([api.getUserInfo(), api.getInitialCards()])\n  .then((data) => {\n    setCurrentUser({\n        name: data[0].name,\n        about: data[0].about,\n        avatar: data[0].avatar\n    });\n    setCards(data[1]);\n})\n.catch((err) => {\n  console.log(`Ошибка: ${err}`);\n})\n}, []) // второй параметр в хуке указываем пустой массив, чтоб не отправлялось куча запросов, а только один. \n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({link: '', name: ''});\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // отправляем данные профиля на сервер\n  function handleUpdateUser(user) {\n    api.editUserInfo(user)\n      .then((user) => {\n        setCurrentUser(user);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.editAvatar(avatar)\n      .then((avatar) => {\n        setCurrentUser(avatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(`Ошибка: ${err}`);\n      })\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      });\n}\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    api.removeCard(card._id)\n    .then((newCard) => {})\n\n  }\n\n  \n\n  return (\n    <CurrentUserContext.Provider value = {currentUser}>\n      <div className=\"contents\">\n        <div className=\"page\">\n          <Header/>\n          <Main \n            onEditProfile={ handleEditProfileClick }\n            onEditAvatar={ handleEditAvatarClick }\n            onAddPlace={ handleAddPlaceClick }\n            onCardClick={ handleCardClick }\n            \n           />\n          <Footer/>\n        </div>\n        <EditProfilePopup  // попап редактирования профиля\n          isOpen={isEditProfilePopupOpen} \n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n        <PopupWithForm // попап добавления карточек\n          name=\"cards\"\n          nameForm=\"add-form\"\n          title=\"Новое место\"\n          button=\"create\"\n          text=\"Создать\"\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n        >\n          <input \n            type=\"text\" \n            id=\"edit-title\" \n            name=\"title\" \n            placeholder=\"Название\" \n            className=\"popup__input popup__input_type_title\" \n            required  \n            minLength=\"2\" \n            maxLength=\"30\"/>\n          <span id=\"edit-title-error\" className=\"error\"></span>\n          <input \n            type=\"url\" \n            id=\"edit-link\" \n            name=\"link\" \n            placeholder=\"Ссылка на картинку\" \n            className=\"popup__input popup__input_type_link\" \n            required />\n          <span id=\"edit-link-error\" className=\"error\"></span>\n        </PopupWithForm>\n        <PopupWithForm // попап подтверждения удаления (!!! Если у компонента нет вложенных элементов, лучше делать сразу самозакрывающийся тег)\n          name=\"delete\"\n          nameForm=\"delete-form\"\n          title=\"Вы уверены?\"\n          button=\"delete\"\n          text=\"Да\"\n        />\n        <EditAvatarPopup // попап аватара\n          isOpen={isEditAvatarPopupOpen} \n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} />\n        <ImagePopup // попап фулскрин картинки\n           card={selectedCard}\n           onClose={closeAllPopups}\n        />\n      </div> \n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}