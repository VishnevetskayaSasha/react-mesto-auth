{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/\\u041A\\u043E\\u0434\\u0438\\u043D\\u0433/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport api from \"../utils/Api.js\";\nimport Card from \"./Card.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(_ref) {\n  _s();\n\n  let {\n    onEditProfile,\n    onEditAvatar,\n    onAddPlace,\n    onCardClick\n  } = _ref;\n  const [userInfo, setUserInfo] = React.useState({\n    userName: '',\n    userDescription: '',\n    userAvatar: ''\n  });\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    // Получаем данные с сервера (Данные профиля + данные карточек)\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(data => {\n      setUserInfo({\n        userName: data[0].name,\n        userDescription: data[0].about,\n        userAvatar: data[0].avatar\n      });\n      setCards(data[1]);\n    }).catch(err => {\n      console.log(`Ошибка: ${err}`);\n    });\n  }, []); // второй параметр в хуке указываем пустой массив, чтоб не отправлялось куча запросов, а только один. \n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__general-information\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${userInfo.userAvatar}`,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\",\n          className: \"profile__avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__avatar-hover\",\n          onClick: onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__name-string\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__name\",\n              children: userInfo.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__button-edit\",\n              onClick: onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__description\",\n            children: userInfo.userDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile__button-add\",\n        onClick: onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"elements__list\",\n        children: cards.map(card => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            link: card.link,\n            name: card.name,\n            likes: card.likes.length,\n            card: card,\n            onCardClick: onCardClick\n          }, card._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"S/iK12hUmKBhD8Tv5y4yFy8oURM=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/sasha/Desktop/Кодинг/mesto-react/src/components/Main.js"],"names":["React","api","Card","Main","onEditProfile","onEditAvatar","onAddPlace","onCardClick","userInfo","setUserInfo","useState","userName","userDescription","userAvatar","cards","setCards","useEffect","Promise","all","getUserInfo","getInitialCards","then","data","name","about","avatar","catch","err","console","log","map","card","link","likes","length","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport api from \"../utils/Api.js\"\nimport Card from \"./Card.js\";\n\n\nfunction Main({onEditProfile, onEditAvatar, onAddPlace, onCardClick}) {\n\n  const [userInfo, setUserInfo] = React.useState({userName:'', userDescription:'', userAvatar:''});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    // Получаем данные с сервера (Данные профиля + данные карточек)\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n    .then((data) => {\n      setUserInfo({\n          userName: data[0].name,\n          userDescription: data[0].about,\n          userAvatar: data[0].avatar\n      });\n      setCards(data[1]);\n  })\n  .catch((err) => {\n    console.log(`Ошибка: ${err}`);\n  })\n}, []) // второй параметр в хуке указываем пустой массив, чтоб не отправлялось куча запросов, а только один. \n\n\n  return (\n    <main className=\"content\">\n    <section className=\"profile\">\n      <div className=\"profile__general-information\">\n        <img src={`${userInfo.userAvatar}`} alt=\"Аватар\" className=\"profile__avatar\"/>\n        <button className=\"profile__avatar-hover\" onClick={onEditAvatar}></button>\n        <div className=\"profile__info\">\n          <div className=\"profile__name-string\">\n            <h1 className=\"profile__name\">{userInfo.userName}</h1> \n            <button type=\"button\" className=\"profile__button-edit\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__description\">{userInfo.userDescription}</p>\n        </div>\n      </div>\n        <button type=\"button\" className=\"profile__button-add\" onClick={onAddPlace}></button>\n    </section>\n    <section className=\"elements\">\n      <ul className=\"elements__list\">\n          {cards.map((card) => {\n            return(\n              <Card\n                key={card._id}\n                link={card.link}\n                name={card.name}\n                likes={card.likes.length}\n                card={card}\n                onCardClick={onCardClick}\n            ></Card>\n            )\n          })\n        }\n      </ul>\n    </section>\n  </main>\n  )\n}\n\nexport default Main\n\n"]},"metadata":{},"sourceType":"module"}