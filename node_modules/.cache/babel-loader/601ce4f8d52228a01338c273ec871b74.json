{"ast":null,"code":"var _jsxFileName = \"/Users/sasha/Desktop/react-mesto-auth/src/components/Register.js\";\nimport React from 'react';\nimport WindowWithRegistrationAndLogin from \"./WindowWithRegistrationAndLogin\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register(props) {\n  console.log;\n  return /*#__PURE__*/_jsxDEV(WindowWithRegistrationAndLogin, {\n    title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n    name: \"registration\",\n    text: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n    onSubmit: props.onSubmitRegistration\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Register;\nexport default _c2 = withRouter(Register);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sasha/Desktop/react-mesto-auth/src/components/Register.js"],"names":["React","WindowWithRegistrationAndLogin","withRouter","Register","props","console","log","onSubmitRegistration"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,8BAAP,MAA2C,kCAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR;AACA,sBACE,QAAC,8BAAD;AACE,IAAA,KAAK,EAAC,oEADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,IAAI,EAAC,8GAHP;AAIE,IAAA,QAAQ,EAAEF,KAAK,CAACG;AAJlB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQJ,Q;AAYT,qBAAeD,UAAU,CAACC,QAAD,CAAzB","sourcesContent":["import React from 'react';\nimport WindowWithRegistrationAndLogin from \"./WindowWithRegistrationAndLogin\";\nimport  {withRouter}  from \"react-router-dom\";\n\n\nfunction Register(props) {\n  console.log\n  return (\n    <WindowWithRegistrationAndLogin\n      title=\"Регистрация\"\n      name=\"registration\"\n      text=\"Зарегистрироваться\"\n      onSubmit={props.onSubmitRegistration}\n    />\n  )\n}\n\nexport default withRouter(Register);\n"]},"metadata":{},"sourceType":"module"}